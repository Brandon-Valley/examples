to pull and update all submodules:  https://stackoverflow.com/questions/18770545/why-is-my-git-submodule-head-detached-from-master

git pull --recurse-submodules 

  in all submodules:
  git checkout master
  git pull
 
  
fully remove all local changes:  
    git reset --hard --recurse-submodules
    
    
after adding submodules, run so submodules update correctly:
 git config -f .gitmodules submodule."test_submodule".update rebase
 git config -f .gitmodules submodule."test_submodule".branch master
   
   
get all submodules:  git config --file .gitmodules --get-regexp path | awk '{ print $2 }'    
    

run after git flow --init to track develop branch so you dont end up pulling a repo without access to develop:
  git push origin develop
  git branch develop --set-upstream-to=remotes/origin/develop
  
  
  
to recover from bad git reset --hard:
  https://stackoverflow.com/questions/5788037/recover-from-git-reset-hard   2nd answer
    $ git reflog show
    93567ad HEAD@{0}: reset: moving to HEAD@{6}    
    203e84e HEAD@{1}: reset: moving to HEAD@{1}    
    9937a76 HEAD@{2}: reset: moving to HEAD@{2}
    203e84e HEAD@{3}: checkout: moving from master to master
    203e84e HEAD@{4}: reset: moving to HEAD~1
    9937a76 HEAD@{5}: reset: moving to HEAD~1
    d5bb59f HEAD@{6}: reset: moving to HEAD~1
    9300f9d HEAD@{7}: commit: fix-bug

    # said the commit to be recovered back is on 9300f9d (with commit message fix-bug)
    $ git reset HEAD@{7}



To delete submodule example:
---------------------------

https://gist.github.com/myusuf3/7f645819ded92bda6677
git rm --cached usms/exception_utils
git rm --cached usms/file_system_utils

rm -rf .git/modules/usms/exception_utils
rm -rf .git/modules/usms/file_system_utils

rm -rf usms/exception_utils
rm -rf usms/file_system_utils
